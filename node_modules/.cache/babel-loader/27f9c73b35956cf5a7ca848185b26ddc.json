{"remainingRequest":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/babel-loader/lib/index.js!/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue?vue&type=template&id=9900e99c","dependencies":[{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue","mtime":1641456065927},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/babel.config.js","mtime":1641292994736},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgdk1vZGVsU2VsZWN0IGFzIF92TW9kZWxTZWxlY3QsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcyB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJvcHRpb24iLCB7CiAgdmFsdWU6ICIwIgp9LCAiU2VsZWN0IENvdW50cnkiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMiA9IFsidmFsdWUiXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX3dpdGhEaXJlY3RpdmVzKChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInNlbGVjdCIsIHsKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5zZWxlY3RlZCA9ICRldmVudDsKICAgIH0pLAogICAgY2xhc3M6ICJmb3JtLXNlbGVjdCBtdC0xMCBibG9jayB3LWZ1bGwgYm9yZGVyIHAtMyByb3VuZGVkIiwKICAgIG9uQ2hhbmdlOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm9uQ2hhbmdlICYmICRvcHRpb25zLm9uQ2hhbmdlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBbX2hvaXN0ZWRfMSwgKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkcHJvcHMuY291bnRyaWVzLCBmdW5jdGlvbiAoY291bnRyeSkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygib3B0aW9uIiwgewogICAgICBrZXk6IGNvdW50cnkuQ291bnRyeSwKICAgICAgdmFsdWU6IGNvdW50cnkuSUQKICAgIH0sIF90b0Rpc3BsYXlTdHJpbmcoY291bnRyeS5Db3VudHJ5KSwgOQogICAgLyogVEVYVCwgUFJPUFMgKi8KICAgICwgX2hvaXN0ZWRfMik7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldLCA1NDQKICAvKiBIWURSQVRFX0VWRU5UUywgTkVFRF9QQVRDSCAqLwogICkpLCBbW192TW9kZWxTZWxlY3QsICRkYXRhLnNlbGVjdGVkXV0pOwp9"},{"version":3,"sources":["/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue"],"names":[],"mappings":";;8BAMI,mBAAA,CAAyC,QAAzC,EAAyC;AAAjC,EAAA,KAAK,EAAC;AAA2B,CAAzC,EAAkB,gBAAlB,EAAgC,CAAA;AAAA;AAAhC,C;;;;wCALF,mBAAA,CASS,QATT,EASS;;aARE,KAAA,CAAA,Q,GAAQ,M;MAQV;AAPP,IAAA,KAAK,EAAC,mDAOC;AANN,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,QAAA,IAAA,QAAA,CAAA,QAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAMA,GATT,E,CAKE,U,qBACA,mBAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAFiB,MAAA,CAAA,SAEjB,EAF0B,UAApB,OAAoB,EAAb;yBAAtB,mBAAA,CAES,QAFT,EAES;AAFmC,MAAA,GAAG,EAAE,OAAO,CAAC,OAEhD;AAFgE,MAAA,KAAK,EAAE,OAAO,CAAC;AAE/E,KAFT,E,iBACK,OAAO,CAAC,O,CADb,EACoB;AAAA;AADpB,MACoB,UADpB,C;GAES,CAFT,E;;AAAA,G,EANF,E;;AAAA,G,oBACW,KAAA,CAAA,Q","sourcesContent":["<template>\n  <select\n    v-model=\"selected\"\n    class=\"form-select mt-10 block w-full border p-3 rounded\"\n    @change=\"onChange\"\n  >\n    <option value=\"0\">Select Country</option>\n    <option v-for=\"country in countries\" v-bind:key=\"country.Country\" v-bind:value=\"country.ID\">\n      {{ country.Country }}\n    </option>\n  </select>\n</template>\n\n<script>\nexport default {\n    name:'CountrySelect',\n    props: ['countries'],\n    data(){\n      return{\n        selected:0\n      }\n    },\n    methods:{\n      onChange(e){\n       const country = this.countries.find((item) => item.ID === this.countries[e.target.options.selectedIndex].ID);\n      \n     \n       this.$emit(\"getCountryData\",country);\n      }\n    }\n}\n</script>"],"sourceRoot":""}]}