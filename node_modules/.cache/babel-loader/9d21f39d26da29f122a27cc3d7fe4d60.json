{"remainingRequest":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/babel-loader/lib/index.js!/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue","mtime":1641456065927},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/babel.config.js","mtime":1641292994736},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rashmita/Documents/project/covidtracker/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvdW50cnlTZWxlY3QnLAogIHByb3BzOiBbJ2NvdW50cmllcyddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZDogMAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY291bnRyeSA9IHRoaXMuY291bnRyaWVzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5JRCA9PT0gX3RoaXMuY291bnRyaWVzW2UudGFyZ2V0Lm9wdGlvbnMuc2VsZWN0ZWRJbmRleF0uSUQ7CiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCJnZXRDb3VudHJ5RGF0YSIsIGNvdW50cnkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/rashmita/Documents/project/covidtracker/covid-tracker/src/components/CountrySelect.vue"],"names":[],"mappings":";;AAcA,eAAe;AACX,EAAA,IAAI,EAAC,eADM;AAEX,EAAA,KAAK,EAAE,CAAC,WAAD,CAFI;AAGX,EAAA,IAHW,kBAGL;AACJ,WAAM;AACJ,MAAA,QAAQ,EAAC;AADL,KAAN;AAGD,GAPU;AAQX,EAAA,OAAO,EAAC;AACN,IAAA,QADM,oBACG,CADH,EACK;AAAA;;AACV,UAAM,OAAM,GAAI,KAAK,SAAL,CAAe,IAAf,CAAoB,UAAC,IAAD;AAAA,eAAU,IAAI,CAAC,EAAL,KAAY,KAAI,CAAC,SAAL,CAAe,CAAC,CAAC,MAAF,CAAS,OAAT,CAAiB,aAAhC,EAA+C,EAArE;AAAA,OAApB,CAAhB;AAGA,WAAK,KAAL,CAAW,gBAAX,EAA4B,OAA5B;AACD;AANM;AARG,CAAf","sourcesContent":["<template>\n  <select\n    v-model=\"selected\"\n    class=\"form-select mt-10 block w-full border p-3 rounded\"\n    @change=\"onChange\"\n  >\n    <option value=\"0\">Select Country</option>\n    <option v-for=\"country in countries\" v-bind:key=\"country.Country\" v-bind:value=\"country.ID\">\n      {{ country.Country }}\n    </option>\n  </select>\n</template>\n\n<script>\nexport default {\n    name:'CountrySelect',\n    props: ['countries'],\n    data(){\n      return{\n        selected:0\n      }\n    },\n    methods:{\n      onChange(e){\n       const country = this.countries.find((item) => item.ID === this.countries[e.target.options.selectedIndex].ID);\n      \n     \n       this.$emit(\"getCountryData\",country);\n      }\n    }\n}\n</script>"],"sourceRoot":""}]}